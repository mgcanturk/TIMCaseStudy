// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TIMCaseStudy.Persistence.Context;

#nullable disable

namespace TIMCaseStudy.Persistence.Migrations
{
    [DbContext(typeof(TIMCaseStudyDbContext))]
    partial class TIMCaseStudyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1088),
                            NameSurname = "Sabahattin Ali",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1089)
                        },
                        new
                        {
                            Id = 2,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1090),
                            NameSurname = "Stefan Zweig",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1091)
                        },
                        new
                        {
                            Id = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1092),
                            NameSurname = "Yaşar Kemal",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1093)
                        },
                        new
                        {
                            Id = 4,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1094),
                            NameSurname = "Doğan Cüceloğlu",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1094)
                        },
                        new
                        {
                            Id = 5,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1095),
                            NameSurname = "Şermin Yaşar",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1096)
                        });
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1122),
                            ISBN = "1234567890",
                            IsAvailable = true,
                            Name = "Pamuk Prenses ve Yedi Cüceler",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1123)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CategoryId = 1,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1125),
                            ISBN = "1234567891",
                            IsAvailable = true,
                            Name = "Alacakaranlık",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1125)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CategoryId = 1,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1127),
                            ISBN = "1234567892",
                            IsAvailable = true,
                            Name = "Harry Potter ve Felsefe Taşı",
                            Publisher = "Pegasus Yayınları",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1127)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CategoryId = 2,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1129),
                            ISBN = "1234567893",
                            IsAvailable = true,
                            Name = "Yüzüklerin Efendisi: Kralın Dönüşü",
                            Publisher = "Pegasus Yayınları",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1129)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 1,
                            CategoryId = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1131),
                            ISBN = "1234567894",
                            IsAvailable = true,
                            Name = "Sıradışı Öğrenciler",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1131)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            CategoryId = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1133),
                            ISBN = "1234567895",
                            IsAvailable = true,
                            Name = "Ormanlar Kralı",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1133)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            CategoryId = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1135),
                            ISBN = "1234567897",
                            IsAvailable = true,
                            Name = "Japon Edebiyatı Tarihi",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1135)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CategoryId = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1137),
                            ISBN = "1234567898",
                            IsAvailable = true,
                            Name = "Tarihte İslam Dünyası",
                            Publisher = "Pegasus Yayınları",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1137)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 2,
                            CategoryId = 2,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1139),
                            ISBN = "1234567899",
                            IsAvailable = true,
                            Name = "Yunan Mitolojisi",
                            Publisher = "Doğan Kitap",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1139)
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 1,
                            CategoryId = 4,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1141),
                            ISBN = "12345678910",
                            IsAvailable = true,
                            Name = "İngiliz Tarihi",
                            Publisher = "Pegasus Yayınları",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1141)
                        });
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.BookTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ISBN")
                        .HasColumnType("int");

                    b.Property<bool>("IsLate")
                        .HasColumnType("bit");

                    b.Property<int>("LateDay")
                        .HasColumnType("int");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RetrieveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ISBN");

                    b.HasIndex("MemberId");

                    b.ToTable("BookTransactions");
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(881),
                            Name = "Roman",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(891)
                        },
                        new
                        {
                            Id = 2,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(893),
                            Name = "Hikaye",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(894)
                        },
                        new
                        {
                            Id = 3,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(895),
                            Name = "Tarih",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(895)
                        },
                        new
                        {
                            Id = 4,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(896),
                            Name = "Bilim Kurgu",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(897)
                        },
                        new
                        {
                            Id = 5,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(898),
                            Name = "Korku",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(898)
                        },
                        new
                        {
                            Id = 6,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(899),
                            Name = "Polisiye",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(901)
                        },
                        new
                        {
                            Id = 7,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(902),
                            Name = "Psikoloji",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(902)
                        },
                        new
                        {
                            Id = 8,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(903),
                            Name = "Fantastik",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(904)
                        },
                        new
                        {
                            Id = 9,
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(905),
                            Name = "Kişisel Gelişim",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(906)
                        },
                        new
                        {
                            Id = 10,
                            CreateDateTime = new DateTime(2022, 1, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Edebiyat",
                            UpdateDateTime = new DateTime(2022, 1, 8, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 25,
                            City = "İstanbul",
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1060),
                            NameSurname = "Ali Kırkpınar",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1061)
                        },
                        new
                        {
                            Id = 2,
                            Age = 32,
                            City = "İstanbul",
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1064),
                            NameSurname = "Veli Karapınar",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1064)
                        },
                        new
                        {
                            Id = 3,
                            Age = 23,
                            City = "Ankara",
                            CreateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1065),
                            NameSurname = "Kahraman Paladin",
                            UpdateDateTime = new DateTime(2022, 12, 17, 23, 53, 6, 699, DateTimeKind.Local).AddTicks(1066)
                        });
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Book", b =>
                {
                    b.HasOne("TIMCaseStudy.Domain.Entities.Author", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TIMCaseStudy.Domain.Entities.Category", null)
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.BookTransaction", b =>
                {
                    b.HasOne("TIMCaseStudy.Domain.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("ISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TIMCaseStudy.Domain.Entities.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("TIMCaseStudy.Domain.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
